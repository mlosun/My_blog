<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开源笔记 Mlosun.com – 图床</title>
    <link>https://mlosun.github.io/My_blog/tags/%E5%9B%BE%E5%BA%8A/</link>
    <description>Recent content in 图床 on 开源笔记 Mlosun.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 15 Sep 2024 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://mlosun.github.io/My_blog/tags/%E5%9B%BE%E5%BA%8A/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>使用 PicGo 和 Github 搭建图床</title>
      <link>https://mlosun.github.io/My_blog/6-%E4%B8%BB%E9%A2%98%E9%9B%86/@%E6%95%B0%E5%AD%97%E8%8A%B1%E5%9B%AD/content/blog/picgo-github/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>https://mlosun.github.io/My_blog/6-%E4%B8%BB%E9%A2%98%E9%9B%86/@%E6%95%B0%E5%AD%97%E8%8A%B1%E5%9B%AD/content/blog/picgo-github/</guid>
      <description>
        
        
        &lt;h2&gt;Github 设置&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;github-设置&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#github-%e8%ae%be%e7%bd%ae&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/new&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;创建&lt;/a&gt; 一个新的 Github 仓库
&lt;ul&gt;
&lt;li&gt;手动创建 &lt;code&gt;CNAME&lt;/code&gt; 绑定域名（记得解析）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Settings - Pages&lt;/code&gt; 中
&lt;ul&gt;
&lt;li&gt;Branch 设置为 &lt;code&gt;main&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;勾选 Enforce HTTPS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/settings/tokens&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;创建&lt;/a&gt; 一个新的 Github Token&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;PicGo 设置&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;picgo-设置&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#picgo-%e8%ae%be%e7%bd%ae&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;下载&lt;/a&gt; 并安装 PicGo v2.3.1
&lt;ul&gt;
&lt;li&gt;截止目前（2024-09-15）&lt;/li&gt;
&lt;li&gt;最新的正式版是 v2.3.1&lt;/li&gt;
&lt;li&gt;最新的测试版是 v2.4.0-beta.8&lt;/li&gt;
&lt;li&gt;图床服务对功能无更多需求，稳定优先，所以使用最新的正式版即可&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;添加一个 Github 图床
&lt;ul&gt;
&lt;li&gt;仓库名、分支名、Token 自行填写&lt;/li&gt;
&lt;li&gt;设定存储路径：我使用 &lt;code&gt;images/2024/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设定自定义域名：填写仓库里使用 &lt;code&gt;CNAME&lt;/code&gt; 文件绑定的域名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PicGo 设置
&lt;ul&gt;
&lt;li&gt;开启自启：开&lt;/li&gt;
&lt;li&gt;时间戳重命名：开&lt;/li&gt;
&lt;li&gt;上传后自动复制 URL：开&lt;/li&gt;
&lt;li&gt;其余根据自身喜好设置即可&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;这样设置后，图片路径将是这样的格式 &lt;code&gt;https://域名/images/2024/202409152129743.jpg&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;定期维护&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;定期维护&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%ae%9a%e6%9c%9f%e7%bb%b4%e6%8a%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;这个图床我主要在 Hugo 和 Obsidian 中使用，这里有两个考虑点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自己在 Obsidian 笔记的过程中会产生一些冗余图片，很久后笔记失效同时对应的图片也会失效&lt;/li&gt;
&lt;li&gt;目前使用 Github 作为图床存储，但未来或许会迁移到腾讯云 COS 中，冗余图片会带来不必要的成本
所以我需要有一个定期维护的方案。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个定期维护的周期，按月太频繁，所以考虑按年维护即可。如前面描述，存储路径被我设置为 &lt;code&gt;images/2024/&lt;/code&gt;，到明年的话就会改成 &lt;code&gt;images/2025/&lt;/code&gt;
这样的话每年清理一遍冗余图片即可。&lt;/p&gt;
&lt;p&gt;（这样的方案也比较灵活，结合时间戳重命名，如果在 2025 年年初未能及时重新设置，那么图片路径会变成 &lt;code&gt;images/2024/2025***********.jpg&lt;/code&gt;，也能够很方便的找出来）&lt;/p&gt;
&lt;h2&gt;应用设置&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;应用设置&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%ba%94%e7%94%a8%e8%ae%be%e7%bd%ae&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Obsidian&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;obsidian&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#obsidian&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;使用插件 &lt;a href=&#34;https://github.com/renmu123/obsidian-image-auto-upload-plugin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Image auto upload&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装后只需要确保 PicGo server 上传接口地址和端口与 PicGo 设置的一致即可（通常都是默认）&lt;/p&gt;
&lt;p&gt;其余的一些个性化设置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;剪切板自动上传：开&lt;/li&gt;
&lt;li&gt;图片描述：移除 image.png&lt;/li&gt;
&lt;li&gt;图片大小后缀：空&lt;/li&gt;
&lt;li&gt;应用网络图片：开&lt;/li&gt;
&lt;li&gt;上传文件后移除源文件：开&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Hugo&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;hugo&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#hugo&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;由于我大部分 Hugo 的文章都是通过 Obsidian 完成，所以并不需要做什么特殊的设置。&lt;/p&gt;
&lt;p&gt;只有少量单独的图片需要使用到图床时，手动上传到 &lt;code&gt;blog&lt;/code&gt; 目录下即可。&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
